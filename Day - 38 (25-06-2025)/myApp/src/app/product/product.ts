{"version":3,"sources":["src/app/auth-guard.spec.ts","src/app/auth-guard.ts","node_modules/@angular/router/fesm2022/testing.mjs"],"sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { AuthGuard } from './auth-guard';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\n\ndescribe('AuthGuard', () => {\n  let guard: AuthGuard;\n  let router: Router;\n  let route: ActivatedRouteSnapshot;\n  let state: RouterStateSnapshot;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [RouterTestingModule.withRoutes([])],\n      providers: [AuthGuard]\n    });\n\n    guard = TestBed.inject(AuthGuard);\n    router = TestBed.inject(Router);\n\n    route = {} as ActivatedRouteSnapshot;\n    state = { url: '/protected' } as RouterStateSnapshot;\n  });\n\n  afterEach(() => {\n    localStorage.clear();\n  });\n\n  it('should allow activation if token exists', () => {\n    localStorage.setItem('token', 'fake-token');\n    const result = guard.canActivate(route, state);\n    expect(result).toBeTrue();\n  });\n\n  it('should block activation and redirect if token is missing', () => {\n    spyOn(router, 'navigate');\n    localStorage.removeItem('token');\n\n    const result = guard.canActivate(route, state);\n\n    expect(result).toBeFalse();\n    expect(router.navigate).toHaveBeenCalledWith(['login']);\n  });\n});\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate,  Router, RouterStateSnapshot } from '@angular/router';\n@Injectable()\nexport class AuthGuard implements CanActivate{\n  constructor(private router:Router){\n\n  }\n canActivate(route:ActivatedRouteSnapshot, state:RouterStateSnapshot):boolean{\n  const isAuthenticated = localStorage.getItem(\"token\")?true:false;\n  if(!isAuthenticated)\n  {\n    this.router.navigate([\"login\"]);\n    return false;\n  } \n  return true;\n }\n  \n}\n\n","/**\n * @license Angular v20.0.4\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { NgModule, Injectable, signal, Component, ViewChild } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { ROUTES, ROUTER_CONFIGURATION, RouterOutlet, Router, afterNextNavigation } from './router-CsukTOog.mjs';\nexport { ɵEmptyOutletComponent as ɵɵEmptyOutletComponent } from './router-CsukTOog.mjs';\nimport { RouterModule, ROUTER_PROVIDERS, withPreloading, NoPreloading } from './router_module-DTmwsUYo.mjs';\nexport { RouterLink as ɵɵRouterLink, RouterLinkActive as ɵɵRouterLinkActive } from './router_module-DTmwsUYo.mjs';\nimport { provideLocationMocks } from '@angular/common/testing';\nimport '@angular/common';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/platform-browser';\n\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```ts\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterModule.forRoot(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n * @deprecated Use `provideRouter` or `RouterModule`/`RouterModule.forRoot` instead.\n * This module was previously used to provide a helpful collection of test fakes,\n * most notably those for `Location` and `LocationStrategy`.  These are generally not\n * required anymore, as `MockPlatformLocation` is provided in `TestBed` by default.\n * However, you can use them directly with `provideLocationMocks`.\n */\nclass RouterTestingModule {\n    static withRoutes(routes, config) {\n        return {\n            ngModule: RouterTestingModule,\n            providers: [\n                { provide: ROUTES, multi: true, useValue: routes },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: RouterTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.4\", ngImport: i0, type: RouterTestingModule, exports: [RouterModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: RouterTestingModule, providers: [\n            ROUTER_PROVIDERS,\n            provideLocationMocks(),\n            withPreloading(NoPreloading).ɵproviders,\n            { provide: ROUTES, multi: true, useValue: [] },\n        ], imports: [RouterModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: RouterTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [RouterModule],\n                    providers: [\n                        ROUTER_PROVIDERS,\n                        provideLocationMocks(),\n                        withPreloading(NoPreloading).ɵproviders,\n                        { provide: ROUTES, multi: true, useValue: [] },\n                    ],\n                }]\n        }] });\n\nclass RootFixtureService {\n    fixture;\n    harness;\n    createHarness() {\n        if (this.harness) {\n            throw new Error('Only one harness should be created per test.');\n        }\n        this.harness = new RouterTestingHarness(this.getRootFixture());\n        return this.harness;\n    }\n    getRootFixture() {\n        if (this.fixture !== undefined) {\n            return this.fixture;\n        }\n        this.fixture = TestBed.createComponent(RootCmp);\n        this.fixture.detectChanges();\n        return this.fixture;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: RootFixtureService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: RootFixtureService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: RootFixtureService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass RootCmp {\n    outlet;\n    routerOutletData = signal(undefined);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: RootCmp, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.4\", type: RootCmp, isStandalone: true, selector: \"ng-component\", viewQueries: [{ propertyName: \"outlet\", first: true, predicate: RouterOutlet, descendants: true }], ngImport: i0, template: '<router-outlet [routerOutletData]=\"routerOutletData()\"></router-outlet>', isInline: true, dependencies: [{ kind: \"directive\", type: RouterOutlet, selector: \"router-outlet\", inputs: [\"name\", \"routerOutletData\"], outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"], exportAs: [\"outlet\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: RootCmp, decorators: [{\n            type: Component,\n            args: [{\n                    template: '<router-outlet [routerOutletData]=\"routerOutletData()\"></router-outlet>',\n                    imports: [RouterOutlet],\n                }]\n        }], propDecorators: { outlet: [{\n                type: ViewChild,\n                args: [RouterOutlet]\n            }] } });\n/**\n * A testing harness for the `Router` to reduce the boilerplate needed to test routes and routed\n * components.\n *\n * @publicApi\n */\nclass RouterTestingHarness {\n    /**\n     * Creates a `RouterTestingHarness` instance.\n     *\n     * The `RouterTestingHarness` also creates its own root component with a `RouterOutlet` for the\n     * purposes of rendering route components.\n     *\n     * Throws an error if an instance has already been created.\n     * Use of this harness also requires `destroyAfterEach: true` in the `ModuleTeardownOptions`\n     *\n     * @param initialUrl The target of navigation to trigger before returning the harness.\n     */\n    static async create(initialUrl) {\n        const harness = TestBed.inject(RootFixtureService).createHarness();\n        if (initialUrl !== undefined) {\n            await harness.navigateByUrl(initialUrl);\n        }\n        return harness;\n    }\n    /**\n     * Fixture of the root component of the RouterTestingHarness\n     */\n    fixture;\n    /** @internal */\n    constructor(fixture) {\n        this.fixture = fixture;\n    }\n    /** Instructs the root fixture to run change detection. */\n    detectChanges() {\n        this.fixture.detectChanges();\n    }\n    /** The `DebugElement` of the `RouterOutlet` component. `null` if the outlet is not activated. */\n    get routeDebugElement() {\n        const outlet = this.fixture.componentInstance.outlet;\n        if (!outlet || !outlet.isActivated) {\n            return null;\n        }\n        return this.fixture.debugElement.query((v) => v.componentInstance === outlet.component);\n    }\n    /** The native element of the `RouterOutlet` component. `null` if the outlet is not activated. */\n    get routeNativeElement() {\n        return this.routeDebugElement?.nativeElement ?? null;\n    }\n    async navigateByUrl(url, requiredRoutedComponentType) {\n        const router = TestBed.inject(Router);\n        let resolveFn;\n        const redirectTrackingPromise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        afterNextNavigation(TestBed.inject(Router), resolveFn);\n        await router.navigateByUrl(url);\n        await redirectTrackingPromise;\n        this.fixture.detectChanges();\n        const outlet = this.fixture.componentInstance.outlet;\n        // The outlet might not be activated if the user is testing a navigation for a guard that\n        // rejects\n        if (outlet && outlet.isActivated && outlet.activatedRoute.component) {\n            const activatedComponent = outlet.component;\n            if (requiredRoutedComponentType !== undefined &&\n                !(activatedComponent instanceof requiredRoutedComponentType)) {\n                throw new Error(`Unexpected routed component type. Expected ${requiredRoutedComponentType.name} but got ${activatedComponent.constructor.name}`);\n            }\n            return activatedComponent;\n        }\n        else {\n            if (requiredRoutedComponentType !== undefined) {\n                throw new Error(`Unexpected routed component type. Expected ${requiredRoutedComponentType.name} but the navigation did not activate any component.`);\n            }\n            return null;\n        }\n    }\n}\n\nexport { RouterTestingHarness, RouterTestingModule, RouterOutlet as ɵɵRouterOutlet };\n\n"],"mappings":"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","names":["AuthGuard"],"x_google_ignoreList":[2]}